/* Создание последовательности для таблицы персонала */

CREATE SEQUENCE SEQ_PERSONNELS
INCREMENT BY 1 
START WITH 2500
MAXVALUE 1.0E28 
MINVALUE 2500 
NOCYCLE 
CACHE 20 
NOORDER

--

/* Создание фунции генерации идентификатора для таблицы персонала */

CREATE FUNCTION GET_PERSONNEL_ID RETURN INTEGER IS
  ID INTEGER;
BEGIN
  SELECT SEQ_PERSONNELS.NEXTVAL INTO ID FROM DUAL;
  RETURN ID;
END;

--

/* Создание таблицы персонала */


CREATE TABLE PERSONNELS
(
PERSONNEL_ID INTEGER NOT NULL, 
DIVISION_ID INTEGER NOT NULL,
FNAME VARCHAR2(50) NOT NULL,
NAME VARCHAR2(50) NOT NULL,
SNAME VARCHAR2(50) NOT NULL,
PRIMARY KEY (PERSONNEL_ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS (DIVISION_ID)
)  


--

/* Создание просмотра таблицы персонала */


CREATE OR REPLACE VIEW S_PERSONNELS
AS
  SELECT P.*, D.NAME AS DIVISION_NAME
    FROM PERSONNELS P, DIVISIONS D 
   WHERE D.DIVISION_ID=P.DIVISION_ID

--

/* Создание процедуры создания персоны */

CREATE PROCEDURE I_PERSONNEL
(
  PERSONNEL_ID IN INTEGER,
  DIVISION_ID IN INTEGER,
  FNAME IN VARCHAR2,
  NAME IN VARCHAR2,
  SNAME IN VARCHAR2
)  
AS
BEGIN
  INSERT INTO PERSONNELS (PERSONNEL_ID,DIVISION_ID,FNAME,NAME,SNAME) 
       VALUES (PERSONNEL_ID,DIVISION_ID,FNAME,NAME,SNAME);
  COMMIT;
END;

--

/* Создание процедуры изменения персоны */

CREATE PROCEDURE U_PERSONNEL
(
  PERSONNEL_ID IN INTEGER,
  DIVISION_ID IN INTEGER,
  FNAME IN VARCHAR2, 
  NAME IN VARCHAR2, 
  SNAME IN VARCHAR2,
  OLD_PERSONNEL_ID IN INTEGER
)
AS
BEGIN
  UPDATE PERSONNELS 
     SET PERSONNEL_ID=U_PERSONNEL.PERSONNEL_ID,
         DIVISION_ID=U_PERSONNEL.DIVISION_ID,
         FNAME=U_PERSONNEL.FNAME,
         NAME=U_PERSONNEL.NAME,
         SNAME=U_PERSONNEL.SNAME
   WHERE PERSONNEL_ID=OLD_PERSONNEL_ID;
  COMMIT;        
END;

--

/* Создание процедуры удаления персоны */

CREATE PROCEDURE D_PERSONNEL
(
  OLD_PERSONNEL_ID IN INTEGER
)
AS
BEGIN
  DELETE FROM PERSONNELS
        WHERE PERSONNEL_ID=OLD_PERSONNEL_ID;
  COMMIT;        
END;

--

/* Фиксация изменений БД */

COMMIT