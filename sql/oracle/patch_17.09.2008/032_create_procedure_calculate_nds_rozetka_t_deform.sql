/* Создание процедуры расчета деформации связанных с напряжением по розетке */

CREATE OR REPLACE PROCEDURE CALCULATE_NDS_ROZETKA_T_DEFORM
(
  ROZETKA IN INTEGER,
  DATE_OBSERVATION IN DATE,
  MEASURE_TYPE_ID IN INTEGER,
  CYCLE_ID IN INTEGER,
  IS_BASE IN INTEGER,  
  RELATIVE_DEFORMATION IN FLOAT,    
  TENSION_DEFORMATION OUT FLOAT
)
AS
  CONE_COUNT INTEGER;
  CONE_FREQUENCY FLOAT;
  RDC FLOAT;
  ALPHA_B FLOAT;
  ALPHA_N FLOAT;
  DTEMPERATURE FLOAT;
  INSTRUMENT_COUNT INTEGER;
  CONCRETE_TEMPERATURE FLOAT;
  BOOKMARK_TEMPERATURE FLOAT;
  RESISTANCE_0 FLOAT;
  RATIO_INSTRUMENT FLOAT;
  RESISTANCE FLOAT;
  RESISTANCE_LINE FLOAT;
  RELATIVE_DEFORMATION_CONE FLOAT;
  APOINT_NAME INTEGER;
BEGIN
  CONE_COUNT:=0;
  RELATIVE_DEFORMATION_CONE:=0.0;
  
  FOR INC IN (SELECT P.POINT_ID, P.NAME 
                FROM POINTS P, 
	                 (SELECT C.COMPONENT_ID, C.CONVERTER_ID 
                        FROM COMPONENTS C, CONVERTER_PASSPORTS CP
                       WHERE C.COMPONENT_ID=CP.COMPONENT_ID
		                 AND CP.VALUE=TO_CHAR(ROZETKA)
			             AND C.PARAM_ID=60017 /* № розетки */) C1,
                     (SELECT C.COMPONENT_ID, C.CONVERTER_ID 
	                    FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                   WHERE C.COMPONENT_ID=CP.COMPONENT_ID
		                 AND UPPER(CP.VALUE)=UPPER('конус')
		                 AND C.PARAM_ID=60008 /* Расположение прибора */) C2,
	                 (SELECT C.COMPONENT_ID, C.CONVERTER_ID 
	                    FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                   WHERE C.COMPONENT_ID=CP.COMPONENT_ID
			             AND C.PARAM_ID=60012 /* Дата выхода из строя */
				   		 AND ((TO_DATE(CP.VALUE)>=CALCULATE_NDS_ROZETKA_T_DEFORM.DATE_OBSERVATION) OR (TRIM(CP.VALUE) IS NULL))) C3									 
               WHERE P.POINT_ID=C1.CONVERTER_ID
				 AND P.POINT_ID=C2.CONVERTER_ID
				 AND P.POINT_ID=C3.CONVERTER_ID) LOOP

    DBMS_OUTPUT.PUT_LINE('POINT_NAME='||TO_CHAR(INC.NAME));
    DBMS_OUTPUT.PUT_LINE('DATE='||TO_CHAR(DATE_OBSERVATION));
	
    CONE_FREQUENCY:=NULL;
    FOR INC2 IN (SELECT JF.VALUE  
                   FROM JOURNAL_FIELDS JF
	              WHERE JF.POINT_ID=INC.POINT_ID
	                AND JF.PARAM_ID=60003 /* Частота */
	                AND MEASURE_TYPE_ID=CALCULATE_NDS_ROZETKA_T_DEFORM.MEASURE_TYPE_ID
		            AND DATE_OBSERVATION=CALCULATE_NDS_ROZETKA_T_DEFORM.DATE_OBSERVATION
		            AND IS_BASE=CALCULATE_NDS_ROZETKA_T_DEFORM.IS_BASE
 				    AND JF.WHO_CONFIRM IS NOT NULL
				    AND JF.DATE_CONFIRM IS NOT NULL
		  	        AND JF.VALUE<>0.0) LOOP
      CONE_FREQUENCY:=INC2.VALUE;
      EXIT;					  
    END LOOP;					  
				
    DBMS_OUTPUT.PUT_LINE('CONE_FREQUENCY='||TO_CHAR(CONE_FREQUENCY));
					
	IF (CONE_FREQUENCY IS NOT NULL) THEN
	  RDC:=NULL;						   
	  CALCULATE_NDS_R_DEFORM(INC.POINT_ID,CONE_FREQUENCY,RDC);
	  DBMS_OUTPUT.PUT_LINE('RDC='||TO_CHAR(RDC));
  	  IF (RDC IS NOT NULL) THEN
		RELATIVE_DEFORMATION_CONE:=RELATIVE_DEFORMATION_CONE+RDC;
	    CONE_COUNT:=CONE_COUNT+1;
	  END IF;
	END IF;    
  END LOOP;		
		
  DBMS_OUTPUT.PUT_LINE('CONE_COUNT='||TO_CHAR(CONE_COUNT));
  		
  IF (CONE_COUNT>0) THEN
    RELATIVE_DEFORMATION_CONE:=RELATIVE_DEFORMATION_CONE/CONE_COUNT;
  ELSE 
	ALPHA_B:=0.985;
	ALPHA_N:=1.2;
					
    INSTRUMENT_COUNT:=0;
    DTEMPERATURE:=0.0;
    BOOKMARK_TEMPERATURE:=0.0;
    CONCRETE_TEMPERATURE:=0.0;
    FOR INC IN (SELECT P.POINT_ID, C4.TEMPERATURE, C5.RESISTANCE, C6.RATIO 
	              FROM POINTS P, 
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
		                   AND CP.VALUE=TO_CHAR(ROZETKA)
		                   AND C.PARAM_ID=60017 /* № розетки */) C1,
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
			               AND UPPER(CP.VALUE)<>UPPER('конус')
			               AND C.PARAM_ID=60008 /* Расположение прибора */) C2,
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID, TO_DATE(CP.VALUE) AS VALUE 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
				           AND C.PARAM_ID=60012 /* Дата выхода из строя */
				           AND ((TO_DATE(CP.VALUE)>=CALCULATE_NDS_ROZETKA_T_DEFORM.DATE_OBSERVATION) OR (TRIM(CP.VALUE) IS NULL))) C3,
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID, TO_NUMBER(REPLACE(CP.VALUE,',','.'),'FM99999.9999') AS TEMPERATURE 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
					       AND C.PARAM_ID=60020 /* Температура при закладке */) C4,									 
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID, TO_NUMBER(REPLACE(CP.VALUE,',','.'),'FM99999.9999') AS RESISTANCE 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
						   AND C.PARAM_ID=60010 /* Сопротивление датчика */) C5,									 
	                   (SELECT C.COMPONENT_ID, C.CONVERTER_ID, TO_NUMBER(REPLACE(CP.VALUE,',','.'),'FM99999.9999') AS RATIO 
	                      FROM COMPONENTS C, CONVERTER_PASSPORTS CP
	                     WHERE C.COMPONENT_ID=CP.COMPONENT_ID
						   AND C.PARAM_ID=60011 /* Температурный коэффициент прибора */) C6									 
                 WHERE P.POINT_ID=C1.CONVERTER_ID
	  		       AND P.POINT_ID=C2.CONVERTER_ID
				   AND P.POINT_ID=C3.CONVERTER_ID
				   AND P.POINT_ID=C4.CONVERTER_ID
				   AND P.POINT_ID=C5.CONVERTER_ID
				   AND P.POINT_ID=C6.CONVERTER_ID) LOOP
	
	  RESISTANCE:=NULL;
      RESISTANCE_LINE:=NULL;
		 	
	  FOR INC2 IN (SELECT JF.VALUE 
		             FROM JOURNAL_FIELDS JF
	                WHERE JF.POINT_ID=INC.POINT_ID
		              AND JF.PARAM_ID=60002 /* Сопротивление */
		              AND MEASURE_TYPE_ID=CALCULATE_NDS_ROZETKA_T_DEFORM.MEASURE_TYPE_ID
		              AND DATE_OBSERVATION=CALCULATE_NDS_ROZETKA_T_DEFORM.DATE_OBSERVATION
		              AND IS_BASE=CALCULATE_NDS_ROZETKA_T_DEFORM.IS_BASE
				      AND JF.WHO_CONFIRM IS NOT NULL
				      AND JF.DATE_CONFIRM IS NOT NULL
		              AND JF.VALUE<>0.0) LOOP
        RESISTANCE:=INC2.VALUE;
		EXIT;						
      END LOOP;		
	  
	  DBMS_OUTPUT.PUT_LINE('RESISTANCE='||TO_CHAR(RESISTANCE));				
	
      FOR INC2 IN (SELECT JF.VALUE 
		             FROM JOURNAL_FIELDS JF
		            WHERE JF.POINT_ID=INC.POINT_ID
		              AND JF.PARAM_ID=60001 /* Сопротивление линии */
		              AND MEASURE_TYPE_ID=CALCULATE_NDS_ROZETKA_T_DEFORM.MEASURE_TYPE_ID
		              AND DATE_OBSERVATION=CALCULATE_NDS_ROZETKA_T_DEFORM.DATE_OBSERVATION
		              AND IS_BASE=CALCULATE_NDS_ROZETKA_T_DEFORM.IS_BASE) LOOP
        RESISTANCE_LINE:=INC2.VALUE;						
        EXIT;						
      END LOOP;						
	  
	  DBMS_OUTPUT.PUT_LINE('RESISTANCE_LINE='||TO_CHAR(RESISTANCE_LINE));
					  
      IF (RESISTANCE IS NOT NULL) AND (RESISTANCE_LINE IS NOT NULL) THEN
					  							   
		IF (INC.TEMPERATURE IS NOT NULL) THEN
		  BOOKMARK_TEMPERATURE:=BOOKMARK_TEMPERATURE+INC.TEMPERATURE;
		END IF;
					  
		RESISTANCE_0:=0.0;					
		IF (INC.RESISTANCE IS NOT NULL) THEN
		  RESISTANCE_0:=INC.RESISTANCE;
		END IF;
					  
		RATIO_INSTRUMENT:=0.0;
		IF (INC.RATIO IS NOT NULL) THEN
		  RATIO_INSTRUMENT:=INC.RATIO;
		END IF;
					  
		IF (RATIO_INSTRUMENT<>0.0) THEN		   
	      CONCRETE_TEMPERATURE:=CONCRETE_TEMPERATURE+(RESISTANCE-RESISTANCE_0-RESISTANCE_LINE)/RATIO_INSTRUMENT;
		END IF;	
					  							   
	    INSTRUMENT_COUNT:=INSTRUMENT_COUNT+1;
	  END IF;									   
	END LOOP;			
					
	IF (INSTRUMENT_COUNT>0) THEN
	  DTEMPERATURE:=CONCRETE_TEMPERATURE/INSTRUMENT_COUNT-BOOKMARK_TEMPERATURE/INSTRUMENT_COUNT;
	END IF;				   
					
    RELATIVE_DEFORMATION_CONE:=(ALPHA_B-ALPHA_N)*DTEMPERATURE;
  END IF;				   
  
  DBMS_OUTPUT.PUT_LINE('RELATIVE_DEFORMATION_CONE='||TO_CHAR(RELATIVE_DEFORMATION_CONE));
  				
  TENSION_DEFORMATION:=RELATIVE_DEFORMATION-RELATIVE_DEFORMATION_CONE;
END;

--

/* Фиксация изменений БД */

COMMIT