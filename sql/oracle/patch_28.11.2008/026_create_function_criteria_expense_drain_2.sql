/* Создание функции расчета критерия фильтрационного расхода через скважины дренажа 2-го ряда */

CREATE OR REPLACE FUNCTION CRITERIA_EXPENSE_DRAIN_2
(
  CRITERIA_ID IN INTEGER,
  PERIOD IN INTEGER,
  DATE_BEGIN IN DATE,
  DATE_END IN DATE,
  CYCLE_MIN IN INTEGER,
  CYCLE_MAX IN INTEGER
) 
RETURN CRITERIA_TABLE 
PIPELINED 
AS
  RET CRITERIA_OBJECT:=CRITERIA_OBJECT(NULL,NULL,NULL,NULL,NULL);
  FIRST_MIN_VALUE FLOAT;
  FIRST_MAX_VALUE FLOAT;
  SECOND_MIN_VALUE FLOAT;
  SECOND_MAX_VALUE FLOAT;
  FIRST_MODULO INTEGER;
  SECOND_MODULO INTEGER;
  ADATE_BEGIN DATE;
  ADATE_END DATE;
  ACYCLE_MIN INTEGER;
  ACYCLE_MAX INTEGER;
  FLAG INTEGER;
  APARAM_ID INTEGER:=3042 /* Расход */;
  AMEASURE_TYPE_ID INTEGER:=2626 /* Дренаж основания 2 ряда */;
  ADATE_OBSERVATION DATE;
BEGIN
  SELECT FIRST_MIN_VALUE, FIRST_MAX_VALUE, SECOND_MIN_VALUE, SECOND_MAX_VALUE, 
         FIRST_MODULO, SECOND_MODULO
    INTO FIRST_MIN_VALUE, FIRST_MAX_VALUE, SECOND_MIN_VALUE, SECOND_MAX_VALUE, 
         FIRST_MODULO, SECOND_MODULO 
	FROM CRITERIAS 
   WHERE CRITERIA_ID=CRITERIA_EXPENSE_DRAIN_2.CRITERIA_ID;
   
  IF (PERIOD=0) THEN

    ADATE_BEGIN:=DATE_BEGIN;
    IF (ADATE_BEGIN IS NULL) THEN
	  SELECT MIN(DATE_OBSERVATION) INTO ADATE_BEGIN
	    FROM JOURNAL_OBSERVATIONS
	   WHERE PARAM_ID=APARAM_ID
	     AND MEASURE_TYPE_ID=AMEASURE_TYPE_ID;
	END IF;

    ADATE_END:=DATE_END;
    IF (ADATE_END IS NULL) THEN
	  SELECT MAX(DATE_OBSERVATION) INTO ADATE_END
	    FROM JOURNAL_OBSERVATIONS
	   WHERE PARAM_ID=APARAM_ID
	     AND MEASURE_TYPE_ID=AMEASURE_TYPE_ID;
	END IF;
	
	IF (ADATE_BEGIN IS NOT NULL) AND (ADATE_END IS NOT NULL) THEN
      
	  FLAG:=0;
	  FOR INC IN (SELECT T.CYCLE_ID, T.VALUE 
	                FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                            FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE 
                                    FROM JOURNAL_OBSERVATIONS JO, POINTS P
                                   WHERE JO.POINT_ID=P.POINT_ID
                                     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                     AND JO.PARAM_ID=APARAM_ID
                                     AND JO.DATE_OBSERVATION>=ADATE_BEGIN AND JO.DATE_OBSERVATION<=ADATE_END) T
                           GROUP BY T.CYCLE_ID) T, CYCLES C
				   WHERE T.CYCLE_ID=C.CYCLE_ID
				     AND (T.VALUE>=SECOND_MIN_VALUE OR T.VALUE<FIRST_MIN_VALUE OR 
					     (T.VALUE<SECOND_MIN_VALUE AND T.VALUE>FIRST_MAX_VALUE))
                   ORDER BY C.CYCLE_NUM) LOOP
        FLAG:=1;
        RET.POINT_ID:=NULL;
		ADATE_OBSERVATION:=NULL;
		
		SELECT MAX(JO.DATE_OBSERVATION)
		  INTO ADATE_OBSERVATION
		  FROM JOURNAL_OBSERVATIONS JO, POINTS P
		 WHERE JO.POINT_ID=P.POINT_ID
		   AND JO.PARAM_ID=APARAM_ID
		   AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		   AND JO.CYCLE_ID=INC.CYCLE_ID;
		    
	    RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
		RET.CYCLE_ID:=INC.CYCLE_ID;
        RET.VALUE:=INC.VALUE;
        IF (INC.VALUE>=SECOND_MIN_VALUE) THEN
		  RET.STATE:=3;
		ELSE
          RET.STATE:=2;				   
		END IF;				   
	    PIPE ROW (RET);
      END LOOP;
	  
	  IF (FLAG=0) THEN
	  
	    FOR INC IN (SELECT T.*
		              FROM (SELECT T.CYCLE_ID, MIN(T.VALUE) AS VALUE 
	                          FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                                      FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE
                                              FROM JOURNAL_OBSERVATIONS JO, POINTS P
                                             WHERE JO.POINT_ID=P.POINT_ID
                                               AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                               AND JO.PARAM_ID=APARAM_ID
                                               AND JO.DATE_OBSERVATION>=ADATE_BEGIN AND JO.DATE_OBSERVATION<=ADATE_END) T
					                 GROUP BY T.CYCLE_ID) T
							 GROUP BY T.CYCLE_ID) T		  
				     WHERE (VALUE<=FIRST_MAX_VALUE OR VALUE>=FIRST_MIN_VALUE)
                     ORDER BY T.VALUE ASC) LOOP
          RET.POINT_ID:=NULL;
		  ADATE_OBSERVATION:=NULL;
	
		  SELECT MAX(JO.DATE_OBSERVATION)
		    INTO ADATE_OBSERVATION
		    FROM JOURNAL_OBSERVATIONS JO, POINTS P
		   WHERE JO.POINT_ID=P.POINT_ID
		     AND JO.PARAM_ID=APARAM_ID
		     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		     AND JO.CYCLE_ID=INC.CYCLE_ID;
		   	  
	      RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
	      RET.CYCLE_ID:=INC.CYCLE_ID;
          RET.VALUE:=INC.VALUE;
		  RET.STATE:=1;
		  PIPE ROW (RET);
		  EXIT;
		END LOOP;

		FOR INC IN (SELECT T.*
		              FROM (SELECT T.CYCLE_ID, MAX(T.VALUE) AS VALUE 
	                          FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                                      FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE
                                              FROM JOURNAL_OBSERVATIONS JO, POINTS P
                                             WHERE JO.POINT_ID=P.POINT_ID
                                               AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                               AND JO.PARAM_ID=APARAM_ID
                                               AND JO.DATE_OBSERVATION>=ADATE_BEGIN AND JO.DATE_OBSERVATION<=ADATE_END) T
					                 GROUP BY T.CYCLE_ID) T
							 GROUP BY T.CYCLE_ID) T		  
				     WHERE (VALUE<=FIRST_MAX_VALUE OR VALUE>=FIRST_MIN_VALUE)
                     ORDER BY T.VALUE DESC) LOOP
          RET.POINT_ID:=NULL;
		  ADATE_OBSERVATION:=NULL;
	
		  SELECT MAX(JO.DATE_OBSERVATION)
		    INTO ADATE_OBSERVATION
		    FROM JOURNAL_OBSERVATIONS JO, POINTS P
		   WHERE JO.POINT_ID=P.POINT_ID
		     AND JO.PARAM_ID=APARAM_ID
		     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		     AND JO.CYCLE_ID=INC.CYCLE_ID;
		   	  
	      RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
	      RET.CYCLE_ID:=INC.CYCLE_ID;
          RET.VALUE:=INC.VALUE;
		  RET.STATE:=1;
		  PIPE ROW (RET);
		  EXIT;
		END LOOP;
		
	  END IF;
	  
	END IF;  				    

  ELSE

    ACYCLE_MIN:=CYCLE_MIN;
    IF (ACYCLE_MIN IS NULL) THEN
	  SELECT MIN(C.CYCLE_NUM) INTO ACYCLE_MIN
	    FROM JOURNAL_OBSERVATIONS JO, CYCLES C
	   WHERE JO.CYCLE_ID=C.CYCLE_ID
	     AND JO.PARAM_ID=APARAM_ID
         AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID;		
	END IF;

    ACYCLE_MAX:=CYCLE_MAX;
    IF (ACYCLE_MAX IS NULL) THEN
	  SELECT MAX(C.CYCLE_NUM) INTO ACYCLE_MAX
	    FROM JOURNAL_OBSERVATIONS JO, CYCLES C
	   WHERE JO.CYCLE_ID=C.CYCLE_ID
	     AND JO.PARAM_ID=APARAM_ID
         AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID;		
	END IF;
	
	IF (ACYCLE_MIN IS NOT NULL) AND (ACYCLE_MAX IS NOT NULL) THEN
      
	  FLAG:=0;
	  FOR INC IN (SELECT T.CYCLE_ID, T.VALUE 
	                FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                            FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE, C.CYCLE_NUM 
                                    FROM JOURNAL_OBSERVATIONS JO, POINTS P, CYCLES C
                                   WHERE JO.POINT_ID=P.POINT_ID
								     AND JO.CYCLE_ID=C.CYCLE_ID
                                     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                     AND JO.PARAM_ID=APARAM_ID
                                     AND C.CYCLE_NUM>=ACYCLE_MIN AND C.CYCLE_NUM<=ACYCLE_MAX) T
                           GROUP BY T.CYCLE_ID) T, CYCLES C
				   WHERE T.CYCLE_ID=C.CYCLE_ID
				     AND (T.VALUE>=SECOND_MIN_VALUE OR T.VALUE<FIRST_MIN_VALUE OR 
					     (T.VALUE<SECOND_MIN_VALUE AND T.VALUE>FIRST_MAX_VALUE))
                   ORDER BY C.CYCLE_NUM) LOOP
        FLAG:=1;
        RET.POINT_ID:=NULL;
		ADATE_OBSERVATION:=NULL;
		
		SELECT MAX(JO.DATE_OBSERVATION)
		  INTO ADATE_OBSERVATION
		  FROM JOURNAL_OBSERVATIONS JO, POINTS P
	     WHERE JO.POINT_ID=P.POINT_ID
		   AND JO.PARAM_ID=APARAM_ID
		   AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		   AND JO.CYCLE_ID=INC.CYCLE_ID;
		   	  
	    RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
		RET.CYCLE_ID:=INC.CYCLE_ID;
        RET.VALUE:=INC.VALUE;
        IF (INC.VALUE>=SECOND_MIN_VALUE) THEN
		  RET.STATE:=3;
		ELSE
          RET.STATE:=2;				   
		END IF;				   
	    PIPE ROW (RET);
      END LOOP;
	  
	  IF (FLAG=0) THEN

	    FOR INC IN (SELECT T.*
		              FROM (SELECT T.CYCLE_ID, MIN(T.VALUE) AS VALUE 
	                          FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                                      FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE
                                              FROM JOURNAL_OBSERVATIONS JO, POINTS P, CYCLES C
                                             WHERE JO.POINT_ID=P.POINT_ID
											   AND JO.CYCLE_ID=C.CYCLE_ID
                                               AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                               AND JO.PARAM_ID=APARAM_ID
                                               AND C.CYCLE_NUM>=CYCLE_MIN AND C.CYCLE_NUM<=CYCLE_MAX) T
					                 GROUP BY T.CYCLE_ID) T
							 GROUP BY T.CYCLE_ID) T		  
				     WHERE (T.VALUE<=FIRST_MAX_VALUE OR T.VALUE>=FIRST_MIN_VALUE)
                     ORDER BY T.VALUE ASC) LOOP
          RET.POINT_ID:=NULL;
		  ADATE_OBSERVATION:=NULL;
	      
		  SELECT MAX(JO.DATE_OBSERVATION)
		    INTO ADATE_OBSERVATION
		    FROM JOURNAL_OBSERVATIONS JO, POINTS P
		   WHERE JO.POINT_ID=P.POINT_ID
		     AND JO.PARAM_ID=APARAM_ID
		     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		     AND JO.CYCLE_ID=INC.CYCLE_ID;
			 
          RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
		  RET.CYCLE_ID:=INC.CYCLE_ID;
          RET.VALUE:=INC.VALUE;
		  RET.STATE:=1;
		  PIPE ROW (RET);
		  EXIT;
		END LOOP;
	  
	    FOR INC IN (SELECT T.*
		              FROM (SELECT T.CYCLE_ID, MAX(T.VALUE) AS VALUE 
	                          FROM (SELECT T.CYCLE_ID, SUM(T.VALUE) AS VALUE
                                      FROM (SELECT JO.CYCLE_ID, JO.DATE_OBSERVATION, JO.POINT_ID, JO.VALUE
                                              FROM JOURNAL_OBSERVATIONS JO, POINTS P, CYCLES C
                                             WHERE JO.POINT_ID=P.POINT_ID
											   AND JO.CYCLE_ID=C.CYCLE_ID
                                               AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
                                               AND JO.PARAM_ID=APARAM_ID
                                               AND C.CYCLE_NUM>=CYCLE_MIN AND C.CYCLE_NUM<=CYCLE_MAX) T
					                 GROUP BY T.CYCLE_ID) T
							 GROUP BY T.CYCLE_ID) T		  
				     WHERE (T.VALUE<=FIRST_MAX_VALUE OR T.VALUE>=FIRST_MIN_VALUE)
                     ORDER BY T.VALUE DESC) LOOP
          RET.POINT_ID:=NULL;
		  ADATE_OBSERVATION:=NULL;
	      
		  SELECT MAX(JO.DATE_OBSERVATION)
		    INTO ADATE_OBSERVATION
		    FROM JOURNAL_OBSERVATIONS JO, POINTS P
		   WHERE JO.POINT_ID=P.POINT_ID
		     AND JO.PARAM_ID=APARAM_ID
		     AND JO.MEASURE_TYPE_ID=AMEASURE_TYPE_ID
		     AND JO.CYCLE_ID=INC.CYCLE_ID;
			 
          RET.DATE_OBSERVATION:=ADATE_OBSERVATION;
		  RET.CYCLE_ID:=INC.CYCLE_ID;
          RET.VALUE:=INC.VALUE;
		  RET.STATE:=1;
		  PIPE ROW (RET);
		  EXIT;
		END LOOP;
	  END IF;
	  
	END IF;  				    
    
  END IF; 	

  RETURN; 
END; 

--

/* Фиксация изменений */

COMMIT