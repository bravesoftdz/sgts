/* Создание процедуры по умолчанию для значения индикатора */

CREATE OR REPLACE PROCEDURE DEFAULT_IND_VALUE (
   DATE_OBSERVATION DATE,
   CYCLE_ID INTEGER,
   POINT_ID INTEGER,
   VALUE_0 IN OUT FLOAT,
   VALUE_1 IN OUT FLOAT,
   VALUE_2 IN OUT FLOAT
)
AS
   OFFSET_BEGIN FLOAT;
   COUNTING_OUT FLOAT;
   BASE_COUNTING_OUT FLOAT;
   BASE_OFFSET FLOAT;
   TYPE_INDICATOR INTEGER;
   CURRENT_OFFSET_LAST FLOAT;
   ACYCLE_ID INTEGER;
   APOINT_ID INTEGER;
   ADATE DATE;
BEGIN
   IF (VALUE_0 IS NULL)
   THEN
      VALUE_0 := 0.0;
   END IF;

   COUNTING_OUT := VALUE_0;
   APOINT_ID := POINT_ID;
   TYPE_INDICATOR := 1;

   FOR INC IN (SELECT   CP.VALUE,
                        CP.DATE_BEGIN,
                        CP.DATE_END
                   FROM CONVERTER_PASSPORTS CP,
                        COMPONENTS C
                  WHERE CP.COMPONENT_ID = C.COMPONENT_ID
                    AND C.CONVERTER_ID = APOINT_ID
                    AND C.PARAM_ID = 30014 /* Тип индикатора */
               ORDER BY CP.DATE_BEGIN)
   LOOP
      TYPE_INDICATOR := TO_NUMBER (INC.VALUE);
      EXIT WHEN (DATE_OBSERVATION >= INC.DATE_BEGIN)
           AND (DATE_OBSERVATION < INC.DATE_END);
   END LOOP;

   BASE_COUNTING_OUT := 0.0;

   FOR INC IN (SELECT   CP.VALUE,
                        CP.DATE_BEGIN,
                        CP.DATE_END
                   FROM CONVERTER_PASSPORTS CP,
                        COMPONENTS C
                  WHERE CP.COMPONENT_ID = C.COMPONENT_ID
                    AND C.CONVERTER_ID = APOINT_ID
                    AND C.PARAM_ID = 30015 /* Отсчет */
               ORDER BY CP.DATE_BEGIN)
   LOOP
      BASE_COUNTING_OUT := TO_NUMBER (REPLACE (INC.VALUE, ',', '.'), 'FM99999.9999');
      EXIT WHEN (DATE_OBSERVATION >= INC.DATE_BEGIN)
           AND (DATE_OBSERVATION < INC.DATE_END);
   END LOOP;

   BASE_OFFSET := 0.0;

   FOR INC IN (SELECT   CP.VALUE,
                        CP.DATE_BEGIN,
                        CP.DATE_END
                   FROM CONVERTER_PASSPORTS CP,
                        COMPONENTS C
                  WHERE CP.COMPONENT_ID = C.COMPONENT_ID
                    AND C.CONVERTER_ID = APOINT_ID
                    AND C.PARAM_ID = 30017 /* Смещение с начала наблюдений */
               ORDER BY CP.DATE_BEGIN)
   LOOP
      BASE_OFFSET := TO_NUMBER (REPLACE (INC.VALUE, ',', '.'), 'FM99999.9999');
      EXIT WHEN (DATE_OBSERVATION >= INC.DATE_BEGIN)
           AND (DATE_OBSERVATION < INC.DATE_END);
   END LOOP;

   IF TYPE_INDICATOR = 1
   THEN
      OFFSET_BEGIN := COUNTING_OUT - BASE_COUNTING_OUT + BASE_OFFSET;
   ELSE
      OFFSET_BEGIN := BASE_COUNTING_OUT - COUNTING_OUT + BASE_OFFSET;
   END IF;

   ADATE := DATE_OBSERVATION;
   CURRENT_OFFSET_LAST := 0.0;

   FOR INC IN (SELECT   J.VALUE
                   FROM JOURNAL_FIELDS J,
                        CYCLES C
                  WHERE J.CYCLE_ID = C.CYCLE_ID
                    AND J.POINT_ID = APOINT_ID
                    AND J.PARAM_ID = 30030 /* Текущее смещение */
                    AND J.DATE_OBSERVATION < ADATE
               ORDER BY J.DATE_OBSERVATION DESC)
   LOOP
      CURRENT_OFFSET_LAST := INC.VALUE;
      EXIT WHEN CURRENT_OFFSET_LAST IS NOT NULL;
   END LOOP;

   VALUE_1 := OFFSET_BEGIN;
   VALUE_2 := OFFSET_BEGIN - CURRENT_OFFSET_LAST;
END;

--

/* Фиксация изменений */

COMMIT
