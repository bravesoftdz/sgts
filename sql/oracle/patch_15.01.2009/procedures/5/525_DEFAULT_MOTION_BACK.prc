/* Создание процедуры по умолчанию для DEFAULT_MOTION_BACK */

CREATE OR REPLACE PROCEDURE DEFAULT_MOTION_BACK
( 
  VALUE_0 IN OUT FLOAT, 
  VALUE_1 IN OUT FLOAT, 
  VALUE_2 IN OUT FLOAT, 
  VALUE_3 IN OUT FLOAT, 
  VALUE_4 IN OUT FLOAT, 
  POINT_ID IN INTEGER, 
  CYCLE_ID IN INTEGER 
) 
AS    
  P INTEGER; 
  AROUTE_ID INTEGER; 
  DIFF_SUM FLOAT; 
  INC INTEGER; 
  INC2 INTEGER;   
  V FLOAT; 
  N INTEGER; 
BEGIN 
  IF (VALUE_1 IS NULL) THEN 
    VALUE_1:=0.0; 
  END IF; 
  IF (VALUE_0 IS NOT NULL) AND (VALUE_1 IS NOT NULL) THEN 
    VALUE_2:=ROUND(ABS(VALUE_1-VALUE_0)*1000)/1000; 
  
   VALUE_3:=(VALUE_0+VALUE_1)/2; 
   P:=INSTR(VALUE_3,'.'); 
    
   IF (P<>0) THEN 
     IF (SUBSTR(VALUE_3,P+3,1)=5) AND (MOD(SUBSTR(VALUE_3,P+2,1),2)=0) THEN 
       VALUE_3:=SUBSTR(VALUE_3,1,P+2); 
     END IF; 
     IF (SUBSTR(VALUE_3,P+3,1)=5) AND (MOD(SUBSTR(VALUE_3,P+2,1),2)=1) THEN 
       VALUE_3:=SUBSTR(VALUE_3,1,P+2)+0.01; 
     END IF; 
     IF (SUBSTR(VALUE_3,P+3,1)<5) THEN 
       VALUE_3:=SUBSTR(VALUE_3,1,P+2); 
     END IF; 
     IF (SUBSTR(VALUE_3,P+3,1)>5) THEN 
       VALUE_3:=SUBSTR(VALUE_3,1,P+2)+0.01; 
     END IF; 
   ELSE 
     P:=INSTR(VALUE_3,','); 
 
    IF (P<>0) THEN 
       IF (SUBSTR(VALUE_3,P+3,1)=5) AND (MOD(SUBSTR(VALUE_3,P+2,1),2)=0) THEN 
         VALUE_3:=SUBSTR(VALUE_3,1,P+2); 
       END IF; 
       IF (SUBSTR(VALUE_3,P+3,1)=5) AND (MOD(SUBSTR(VALUE_3,P+2,1),2)=1) THEN 
         VALUE_3:=SUBSTR(VALUE_3,1,P+2)+0.01; 
       END IF; 
       IF (SUBSTR(VALUE_3,P+3,1)<5) THEN 
         VALUE_3:=SUBSTR(VALUE_3,1,P+2); 
       END IF; 
       IF (SUBSTR(VALUE_3,P+3,1)>5) THEN 
         VALUE_3:=SUBSTR(VALUE_3,1,P+2)+0.01; 
       END IF; 
    END IF; 
   END IF; 
    
    
   SELECT ROUTE_ID INTO AROUTE_ID FROM ROUTE_POINTS WHERE (POINT_ID=DEFAULT_MOTION_BACK.POINT_ID); 
   DIFF_SUM:=0; 
 
   FOR INC IN (SELECT POINT_ID FROM ROUTE_POINTS WHERE ROUTE_ID=AROUTE_ID ORDER BY PRIORITY) LOOP 
     FOR INC2 IN (SELECT VALUE FROM JOURNAL_FIELDS WHERE (CYCLE_ID=DEFAULT_MOTION_BACK.CYCLE_ID) AND (POINT_ID=INC.POINT_ID) AND (PARAM_ID=50022)) LOOP 
       V:=INC2.VALUE; 
     END LOOP; 
     DIFF_SUM:=DIFF_SUM+V*V; 
   END LOOP; 
 
   SELECT COUNT(*) INTO N FROM ROUTE_POINTS WHERE (ROUTE_ID=AROUTE_ID); 
 
   VALUE_4:=SQRT(DIFF_SUM/N)/2; 
   VALUE_4:=ROUND(VALUE_4*1000)/1000; 
    IF (VALUE_4 IS NULL) THEN 
    VALUE_4:=0.0; 
  END IF; 
  END IF; 
END;

--

/* Фиксация изменений */

COMMIT
