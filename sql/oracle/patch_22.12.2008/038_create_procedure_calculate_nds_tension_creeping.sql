/* Создание процедуры расчета напряжения с учетом ползучести */

CREATE OR REPLACE PROCEDURE CALCULATE_NDS_TENSION_CREEPING
(
  POINT_ID IN INTEGER,
  DATE_OBSERVATION IN DATE,
  MEASURE_TYPE_ID IN INTEGER,
  CYCLE_ID IN INTEGER,
  IS_BASE IN INTEGER,
  TENSION IN FLOAT,
  TENSION_CREEPING OUT FLOAT
)
AS
  POINT_NAME INTEGER;
  DATE_BOOKMARK DATE;
  DAYS INTEGER;
  MAX_DAYS INTEGER;
  TAY FLOAT;
  DTENSION FLOAT;
  DTAY FLOAT;
  KP FLOAT;
  DTENSION_CREEPING FLOAT; 
BEGIN

  SELECT NAME INTO POINT_NAME FROM POINTS WHERE POINT_ID=CALCULATE_NDS_TENSION_CREEPING.POINT_ID;
/*  DBMS_OUTPUT.PUT_LINE('POINT_NAME='||TO_CHAR(POINT_NAME));			
  DBMS_OUTPUT.PUT_LINE('DATE='||TO_CHAR(DATE_OBSERVATION));			
  DBMS_OUTPUT.PUT_LINE('TENSION='||TO_CHAR(TENSION));*/			
  	
  DATE_BOOKMARK:=NULL;
  FOR INC IN (SELECT CP.VALUE,
 	                 CP.DATE_BEGIN,
                     CP.DATE_END
                FROM CONVERTER_PASSPORTS CP, COMPONENTS C, POINTS P
               WHERE CP.COMPONENT_ID=C.COMPONENT_ID
                 AND C.CONVERTER_ID=P.POINT_ID
                 AND P.POINT_ID=CALCULATE_NDS_TENSION_CREEPING.POINT_ID
                 AND C.PARAM_ID=60013 /* Дата закладки */
               ORDER BY CP.DATE_BEGIN) LOOP
    DATE_BOOKMARK:=TO_DATE(INC.VALUE,'DD.MM.YYYY');				   
    EXIT WHEN DATE_BOOKMARK IS NOT NULL;
  END LOOP; 
  	
  IF (DATE_BOOKMARK IS NOT NULL) THEN
  	
    DAYS:=0;
    TAY:=0.0;
    DTENSION:=0.0;
    DTENSION_CREEPING:=0.0;
    MAX_DAYS:=DATE_OBSERVATION-DATE_BOOKMARK;
/*	DBMS_OUTPUT.PUT_LINE('MAX_DAYS='||TO_CHAR(MAX_DAYS));*/ 
	
    FOR INC IN (SELECT T.TENSION, 
	                   T.DATE_OBSERVATION,
					   (T.DATE_OBSERVATION-DATE_BOOKMARK) AS DAYS 
                  FROM (SELECT VALUE AS TENSION, DATE_OBSERVATION 
				          FROM JOURNAL_OBSERVATIONS 
 	                     WHERE MEASURE_TYPE_ID=CALCULATE_NDS_TENSION_CREEPING.MEASURE_TYPE_ID
			               AND PARAM_ID=60034 /* Напряжение */
				           AND POINT_ID=CALCULATE_NDS_TENSION_CREEPING.POINT_ID
				           AND DATE_OBSERVATION<CALCULATE_NDS_TENSION_CREEPING.DATE_OBSERVATION
				         UNION ALL 	  
				        SELECT CALCULATE_NDS_TENSION_CREEPING.TENSION, CALCULATE_NDS_TENSION_CREEPING.DATE_OBSERVATION
				          FROM DUAL) T  	
			     ORDER BY T.DATE_OBSERVATION ASC) LOOP
				 
/*      DBMS_OUTPUT.PUT_LINE('DATE='||TO_CHAR(INC.DATE_OBSERVATION));
      DBMS_OUTPUT.PUT_LINE('DAYS='||TO_CHAR(INC.DAYS));
      DBMS_OUTPUT.PUT_LINE('TENSION='||TO_CHAR(INC.TENSIOn));*/
	
	  TAY:=(INC.DAYS+DAYS)/2;
/*      DBMS_OUTPUT.PUT_LINE('TAY='||TO_CHAR(TAY));*/
	
	  DTENSION:=INC.TENSION-DTENSION;
/*      DBMS_OUTPUT.PUT_LINE('DTENSION='||TO_CHAR(DTENSION));*/
	
	  DTAY:=MAX_DAYS-TAY;
/*      DBMS_OUTPUT.PUT_LINE('DTAY='||TO_CHAR(DTAY));*/
	
	  IF (DTAY<=226) THEN
	    KP:=0.0;
  	    FOR INC2 IN (SELECT K_REL 
	                   FROM RATIO_RELAXATION_CONCRETE
		    		  WHERE DNI=DTAY) LOOP
          KP:=INC2.K_REL;				  
	      EXIT;
	    END LOOP;
	  ELSE 
	    KP:=0.54;  
	  END IF;
/*      DBMS_OUTPUT.PUT_LINE('KP='||TO_CHAR(KP));*/
	
	  DTENSION_CREEPING:=DTENSION_CREEPING+KP*DTENSION;
	
	  DAYS:=INC.DAYS;
	  DTENSION:=INC.TENSION;
    END LOOP;
/*    DBMS_OUTPUT.PUT_LINE('DTENSION_CREEPING='||TO_CHAR(DTENSION_CREEPING));*/
	
	TENSION_CREEPING:=DTENSION_CREEPING;	
  END IF;					 	
			
END;

--

/* Фиксация изменений БД */

COMMIT