/* Создание типа объекта Напольные щелемеры полевого журнала */

CREATE OR REPLACE TYPE SLF_JOURNAL_FIELD_OBJECT AS OBJECT
(
  CYCLE_ID INTEGER,
  CYCLE_NUM INTEGER,
  JOURNAL_NUM VARCHAR2(100),
  DATE_OBSERVATION DATE,
  MEASURE_TYPE_ID INTEGER,
  POINT_ID INTEGER,
  POINT_NAME INTEGER,
  CONVERTER_ID INTEGER,
  CONVERTER_NAME VARCHAR2(100),
  OBJECT_PATHS VARCHAR2(1000),
  COORDINATE_Z FLOAT,
  VALUE_AB_RACK FLOAT,
  VALUE_AB_COMPASSES FLOAT,
  VALUE_AB_MICROMETR FLOAT,
  VALUE_BA_RACK FLOAT,
  VALUE_BA_COMPASSES FLOAT,
  VALUE_BA_MICROMETR FLOAT,
  VALUE_AC_RACK FLOAT,
  VALUE_AC_COMPASSES FLOAT,
  VALUE_AC_MICROMETR FLOAT,
  VALUE_CA_RACK FLOAT,
  VALUE_CA_COMPASSES FLOAT,
  VALUE_CA_MICROMETR FLOAT,
  VALUE_BC_RACK FLOAT,
  VALUE_BC_COMPASSES FLOAT,
  VALUE_BC_MICROMETR FLOAT,
  VALUE_CB_RACK FLOAT,
  VALUE_CB_COMPASSES FLOAT,
  VALUE_CB_MICROMETR FLOAT,
  AVERAGE_AB_COMPASSES FLOAT,
  AVERAGE_AB_MICROMETR FLOAT,
  AVERAGE_AC_COMPASSES FLOAT,
  AVERAGE_AC_MICROMETR FLOAT,
  AVERAGE_BC_COMPASSES FLOAT,
  AVERAGE_BC_MICROMETR FLOAT,
  ERROR FLOAT,
  OPENING_X FLOAT,
  OPENING_Y FLOAT,
  OPENING_Z FLOAT,
  CURRENT_OPENING_X FLOAT,
  CURRENT_OPENING_Y FLOAT,
  CURRENT_OPENING_Z FLOAT
)

--

/* Создание типа таблицы Напольные щелемеры полевого журнала */

CREATE OR REPLACE TYPE SLF_JOURNAL_FIELD_TABLE 
AS TABLE OF SLF_JOURNAL_FIELD_OBJECT

--

/* Создание функции просмотра Напольные щелемеры в полевом журнале */

CREATE OR REPLACE FUNCTION GET_SLF_JOURNAL_FIELDS
(
  MEASURE_TYPE_ID INTEGER,
  IS_CLOSE INTEGER
)
RETURN SLF_JOURNAL_FIELD_TABLE
PIPELINED
IS
  INC2 SLF_JOURNAL_FIELD_OBJECT:=SLF_JOURNAL_FIELD_OBJECT(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
                                                          NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
														  NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
														  NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
														  NULL,NULL);
  NUM_MIN INTEGER:=NULL;
  NUM_MAX INTEGER:=NULL;
BEGIN
  FOR INC IN (SELECT MIN(CYCLE_NUM) AS NUM_MIN, MAX(CYCLE_NUM) AS NUM_MAX 
                FROM CYCLES
               WHERE IS_CLOSE=GET_SLF_JOURNAL_FIELDS.IS_CLOSE) LOOP
    NUM_MIN:=INC.NUM_MIN;
	NUM_MAX:=INC.NUM_MAX;    			   
    EXIT;			   
  END LOOP;			    
   
  FOR INC1 IN (SELECT /*+ INDEX (JF) INDEX (C) INDEX (P) INDEX (RP) INDEX (CR) */
                      JF.DATE_OBSERVATION, 
                      JF.MEASURE_TYPE_ID,
                      JF.CYCLE_ID,
                      C.CYCLE_NUM,
                      JF.POINT_ID,
                      P.NAME AS POINT_NAME,
                      CR.CONVERTER_ID,
                      CR.NAME AS CONVERTER_NAME,
                      JF.GROUP_ID,
					  MIN(DECODE(JF.PARAM_ID,30042,JF.VALUE,NULL)) AS VALUE_AB_RACK,
					  MIN(DECODE(JF.PARAM_ID,30043,JF.VALUE,NULL)) AS VALUE_AB_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30044,JF.VALUE,NULL)) AS VALUE_AB_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30045,JF.VALUE,NULL)) AS VALUE_BA_RACK,
					  MIN(DECODE(JF.PARAM_ID,30046,JF.VALUE,NULL)) AS VALUE_BA_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30047,JF.VALUE,NULL)) AS VALUE_BA_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30048,JF.VALUE,NULL)) AS VALUE_AC_RACK,
					  MIN(DECODE(JF.PARAM_ID,30049,JF.VALUE,NULL)) AS VALUE_AC_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30050,JF.VALUE,NULL)) AS VALUE_AC_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30051,JF.VALUE,NULL)) AS VALUE_CA_RACK,
					  MIN(DECODE(JF.PARAM_ID,30052,JF.VALUE,NULL)) AS VALUE_CA_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30053,JF.VALUE,NULL)) AS VALUE_CA_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30054,JF.VALUE,NULL)) AS VALUE_BC_RACK,
					  MIN(DECODE(JF.PARAM_ID,30056,JF.VALUE,NULL)) AS VALUE_BC_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30057,JF.VALUE,NULL)) AS VALUE_BC_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30058,JF.VALUE,NULL)) AS VALUE_CB_RACK,
					  MIN(DECODE(JF.PARAM_ID,30059,JF.VALUE,NULL)) AS VALUE_CB_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30060,JF.VALUE,NULL)) AS VALUE_CB_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30061,JF.VALUE,NULL)) AS AVERAGE_AB_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30062,JF.VALUE,NULL)) AS AVERAGE_AB_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30063,JF.VALUE,NULL)) AS AVERAGE_AC_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30064,JF.VALUE,NULL)) AS AVERAGE_AC_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30065,JF.VALUE,NULL)) AS AVERAGE_BC_COMPASSES,
					  MIN(DECODE(JF.PARAM_ID,30066,JF.VALUE,NULL)) AS AVERAGE_BC_MICROMETR,
					  MIN(DECODE(JF.PARAM_ID,30067,JF.VALUE,NULL)) AS ERROR,
					  MIN(DECODE(JF.PARAM_ID,30024,JF.VALUE,NULL)) AS OPENING_X,
					  MIN(DECODE(JF.PARAM_ID,30025,JF.VALUE,NULL)) AS OPENING_Y,
					  MIN(DECODE(JF.PARAM_ID,30026,JF.VALUE,NULL)) AS OPENING_Z,
					  MIN(DECODE(JF.PARAM_ID,30069,JF.VALUE,NULL)) AS CURRENT_OPENING_X,
					  MIN(DECODE(JF.PARAM_ID,30070,JF.VALUE,NULL)) AS CURRENT_OPENING_Y,
					  MIN(DECODE(JF.PARAM_ID,30071,JF.VALUE,NULL)) AS CURRENT_OPENING_Z,
					  OT.OBJECT_PATHS,
					  P.COORDINATE_Z,
					  JF.JOURNAL_NUM
                 FROM JOURNAL_FIELDS JF, CYCLES C, POINTS P,
                      ROUTE_POINTS RP, CONVERTERS CR,
                      (SELECT OT1.OBJECT_ID, SUBSTR(MAX(SYS_CONNECT_BY_PATH(O1.NAME,'\')),2) AS OBJECT_PATHS
                         FROM OBJECT_TREES OT1, OBJECTS O1
                        WHERE OT1.OBJECT_ID=O1.OBJECT_ID
                        START WITH OT1.PARENT_ID IS NULL
                      CONNECT BY OT1.PARENT_ID=PRIOR OT1.OBJECT_TREE_ID
					    GROUP BY OT1.OBJECT_ID) OT
                WHERE JF.CYCLE_ID=C.CYCLE_ID
                  AND JF.POINT_ID=P.POINT_ID
                  AND RP.POINT_ID=JF.POINT_ID
                  AND CR.CONVERTER_ID=P.POINT_ID
				  AND P.OBJECT_ID=OT.OBJECT_ID 
                  AND JF.MEASURE_TYPE_ID=GET_SLF_JOURNAL_FIELDS.MEASURE_TYPE_ID
                  AND JF.PARAM_ID IN (30042, /* А-Б по стойке */
				                      30043, /* А-Б по штангенциркулю */
									  30044, /* А-Б по микрометру */
									  30045, /* Б-А по стойке */
									  30046, /* Б-А по штангенциркулю */
									  30047, /* Б-А по микрометру */
									  30048, /* А-С по стойке */
									  30049, /* А-С по штангенциркулю */
									  30050, /* А-С по микрометру */
									  30051, /* С-А по стойке */
									  30052, /* С-А по штангенциркулю */
									  30053, /* С-А по микрометру */
									  30054, /* Б-С по стойке */
									  30056, /* Б-С по штангенциркулю */
									  30057, /* Б-С по микрометру */
									  30058, /* С-Б по стойке */  
									  30059, /* С-Б по штангенциркулю */
									  30060, /* С-Б по микрометру */
									  30061, /* А-Б средний по штангенциркулю */
									  30062, /* А-Б средний по микрометру */
									  30063, /* А-С средний по штангенциркулю */
									  30064, /* А-С средний по микрометру */
									  30065, /* Б-С средний по штангенциркулю */
									  30066, /* Б-С средний по микрометру */
									  30067, /* Невязка превышений */
									  30024, /* Раскрытие с начала наблюдений по X */
									  30069, /* Текущее раскрытие по Х */
									  30025, /* Раскрытие с начала наблюдений по Y */
									  30070, /* Текущее раскрытие по Y */
									  30026, /* Раскрытие с начала наблюдений по Z */
									  30071 /* Текущее раскрытие по Z */)
                  AND C.CYCLE_NUM>=NUM_MIN AND C.CYCLE_NUM<=NUM_MAX
 				  AND C.IS_CLOSE=GET_SLF_JOURNAL_FIELDS.IS_CLOSE								  
                GROUP BY JF.DATE_OBSERVATION, JF.MEASURE_TYPE_ID, JF.CYCLE_ID, C.CYCLE_NUM, JF.POINT_ID, 
				         P.NAME, CR.CONVERTER_ID, CR.NAME, JF.GROUP_ID, RP.PRIORITY, CR.DATE_ENTER, 
						 OT.OBJECT_PATHS, P.COORDINATE_Z, JF.JOURNAL_NUM
                ORDER BY JF.DATE_OBSERVATION, JF.GROUP_ID, RP.PRIORITY) LOOP
    INC2.CYCLE_ID:=INC1.CYCLE_ID;
    INC2.CYCLE_NUM:=INC1.CYCLE_NUM;
    INC2.JOURNAL_NUM:=INC1.JOURNAL_NUM;
	INC2.DATE_OBSERVATION:=INC1.DATE_OBSERVATION;
	INC2.MEASURE_TYPE_ID:=INC1.MEASURE_TYPE_ID;
	INC2.POINT_ID:=INC1.POINT_ID;
	INC2.POINT_NAME:=INC1.POINT_NAME;
	INC2.CONVERTER_ID:=INC1.CONVERTER_ID;
	INC2.CONVERTER_NAME:=INC1.CONVERTER_NAME;
    INC2.OBJECT_PATHS:=INC1.OBJECT_PATHS;
    INC2.COORDINATE_Z:=INC1.COORDINATE_Z;
	INC2.VALUE_AB_RACK:=INC1.VALUE_AB_RACK;
	INC2.VALUE_AB_COMPASSES:=INC1.VALUE_AB_COMPASSES;
	INC2.VALUE_AB_MICROMETR:=INC1.VALUE_AB_MICROMETR;
	INC2.VALUE_BA_RACK:=INC1.VALUE_BA_RACK;
	INC2.VALUE_BA_COMPASSES:=INC1.VALUE_BA_COMPASSES;
	INC2.VALUE_BA_MICROMETR:=INC1.VALUE_BA_MICROMETR;
	INC2.VALUE_AC_RACK:=INC1.VALUE_AC_RACK;
	INC2.VALUE_AC_COMPASSES:=INC1.VALUE_AC_COMPASSES;
	INC2.VALUE_AC_MICROMETR:=INC1.VALUE_AC_MICROMETR;
	INC2.VALUE_CA_RACK:=INC1.VALUE_CA_RACK;
	INC2.VALUE_CA_COMPASSES:=INC1.VALUE_CA_COMPASSES;
	INC2.VALUE_CA_MICROMETR:=INC1.VALUE_CA_MICROMETR;
	INC2.VALUE_BC_RACK:=INC1.VALUE_BC_RACK;
	INC2.VALUE_BC_COMPASSES:=INC1.VALUE_BC_COMPASSES;
	INC2.VALUE_BC_MICROMETR:=INC1.VALUE_BC_MICROMETR;
	INC2.VALUE_CB_RACK:=INC1.VALUE_CB_RACK;
	INC2.VALUE_CB_COMPASSES:=INC1.VALUE_CB_COMPASSES;
	INC2.VALUE_CB_MICROMETR:=INC1.VALUE_CB_MICROMETR;
	INC2.AVERAGE_AB_COMPASSES:=INC1.AVERAGE_AB_COMPASSES;
	INC2.AVERAGE_AB_MICROMETR:=INC1.AVERAGE_AB_MICROMETR;
	INC2.AVERAGE_AC_COMPASSES:=INC1.AVERAGE_AC_COMPASSES;
	INC2.AVERAGE_AC_MICROMETR:=INC1.AVERAGE_AC_MICROMETR;
	INC2.AVERAGE_BC_COMPASSES:=INC1.AVERAGE_BC_COMPASSES;
	INC2.AVERAGE_BC_MICROMETR:=INC1.AVERAGE_BC_MICROMETR;
	INC2.ERROR:=INC1.ERROR;
	INC2.OPENING_X:=INC1.OPENING_X;
	INC2.OPENING_Y:=INC1.OPENING_Y;
	INC2.OPENING_Z:=INC1.OPENING_Z;
	INC2.CURRENT_OPENING_X:=INC1.CURRENT_OPENING_X;
	INC2.CURRENT_OPENING_Y:=INC1.CURRENT_OPENING_Y;
	INC2.CURRENT_OPENING_Z:=INC1.CURRENT_OPENING_Z;
	
    PIPE ROW (INC2);
  END LOOP;
  RETURN;
END;

--


/* Создание просмотра Плотина в полевом журнале старых данных */

CREATE MATERIALIZED VIEW S_SLF_JOURNAL_FIELDS_O1
NOLOGGING
NOCACHE
NOPARALLEL
BUILD DEFERRED
REFRESH COMPLETE
START WITH TO_DATE('01.06.2007','DD.MM.YYYY')
DISABLE QUERY REWRITE AS
SELECT * FROM TABLE(GET_SLF_JOURNAL_FIELDS(30010,1))

--

/* Обновление просмотра Плотина в полевом журнале старых данных */

BEGIN
  DBMS_REFRESH.REFRESH('S_SLF_JOURNAL_FIELDS_O1');
END;

--

/* Создание индекса на цикл просмотра Межсекционные в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O1_1
 ON S_SLF_JOURNAL_FIELDS_O1(CYCLE_ID)

--

/* Создание индекса на дату наблюдения просмотра Плотина в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O1_2
 ON S_SLF_JOURNAL_FIELDS_O1(DATE_OBSERVATION)

--

/* Создание индекса на вид измерения просмотра Плотина в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O1_3
 ON S_SLF_JOURNAL_FIELDS_O1(MEASURE_TYPE_ID)

--

/* Создание просмотра Плотина в полевом журнале новых данных */

CREATE OR REPLACE VIEW S_SLF_JOURNAL_FIELDS_N1
AS
  SELECT * FROM TABLE(GET_SLF_JOURNAL_FIELDS(30010,0))

--

/* Создание просмотра Плотина в полевом журнале */

CREATE OR REPLACE VIEW S_SLF_JOURNAL_FIELDS_1
AS
  SELECT JFO1.*
    FROM S_SLF_JOURNAL_FIELDS_O1 JFO1
   UNION
  SELECT JFN1.*
    FROM S_SLF_JOURNAL_FIELDS_N1 JFN1

--



/* Создание просмотра Здание ГЭС в полевом журнале старых данных */

CREATE MATERIALIZED VIEW S_SLF_JOURNAL_FIELDS_O2
NOLOGGING
NOCACHE
NOPARALLEL
BUILD DEFERRED
REFRESH COMPLETE
START WITH TO_DATE('01.06.2007','DD.MM.YYYY')
DISABLE QUERY REWRITE AS
SELECT * FROM TABLE(GET_SLF_JOURNAL_FIELDS(30011,1))

--

/* Обновление просмотра Здание ГЭС в полевом журнале старых данных */

BEGIN
  DBMS_REFRESH.REFRESH('S_SLF_JOURNAL_FIELDS_O2');
END;

--

/* Создание индекса на цикл просмотра Здание ГЭС в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O2_1
 ON S_SLF_JOURNAL_FIELDS_O2(CYCLE_ID)

--

/* Создание индекса на дату наблюдения просмотра Здание ГЭС в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O2_2
 ON S_SLF_JOURNAL_FIELDS_O2(DATE_OBSERVATION)

--

/* Создание индекса на вид измерения просмотра Здание ГЭС в полевом журнале старых данных */

CREATE INDEX IDX_SLF_JF_O2_3
 ON S_SLF_JOURNAL_FIELDS_O2(MEASURE_TYPE_ID)

--

/* Создание просмотра Здание ГЭС в полевом журнале новых данных */

CREATE OR REPLACE VIEW S_SLF_JOURNAL_FIELDS_N2
AS
  SELECT * FROM TABLE(GET_SLF_JOURNAL_FIELDS(30011,0))

--

/* Создание просмотра Здание ГЭС в полевом журнале */

CREATE OR REPLACE VIEW S_SLF_JOURNAL_FIELDS_2
AS
  SELECT JFO2.*
    FROM S_SLF_JOURNAL_FIELDS_O2 JFO2
   UNION
  SELECT JFN2.*
    FROM S_SLF_JOURNAL_FIELDS_N2 JFN2

--


/* Создание просмотра Напольные щелемеры в полевом журнале */

CREATE OR REPLACE VIEW S_SLF_JOURNAL_FIELDS
AS
  SELECT JF1.*
    FROM S_SLF_JOURNAL_FIELDS_1 JF1
   UNION
  SELECT JF2.*
    FROM S_SLF_JOURNAL_FIELDS_2 JF2

--


/* Фиксация изменений БД */

COMMIT
