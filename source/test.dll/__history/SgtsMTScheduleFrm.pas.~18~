unit SgtsMTScheduleFrm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ToolWin, ImgList, ExtCtrls, Grids, DBGrids, DB, Menus,
  SgtsDbGrid, SgtsDatabaseCDS, SgtsCoreIntf, SgtsCDS,
  SgtsDataInsertFm, SgtsDataUpdateFm, SgtsDataDelete, SgtsDataFmIntf,
  SgtsDataFm, SgtsDataIfaceIntf, SgtsExecuteDefs, SgtsGetRecordsConfig, SgtsMenus,
  SgtsConfigIntf, StdCtrls, CheckLst;

type
  TSgtsMTScheduleFrame = class(TFrame)
    PanelSchedule: TPanel;
    Splitter1: TSplitter;
    PanelMonth: TPanel;
    Splitter2: TSplitter;
    Panel3: TPanel;
    ImageList: TImageList;
    ToolBar: TToolBar;
    ToolButtonRefresh: TToolButton;
    ToolButtonOk: TToolButton;
    ToolButtonCancel: TToolButton;
    CheckListBoxMonth: TCheckListBox;
    ToolButtonEdit: TToolButton;
    procedure ToolButtonEditClick(Sender: TObject);
    procedure ToolButtonRefreshClick(Sender: TObject);
    procedure ToolButtonOkClick(Sender: TObject);
    procedure ToolButtonCancelClick(Sender: TObject);
  private
    { Private declarations }
    FCoreIntf: ISgtsCore;
    FDataSet: TSgtsDatabaseCDS;
    FDataSetPlan: TSgtsDatabaseCDS;
    FYear: Integer;
    FPlanGraphId: Integer;
    FEditMode: Boolean;
    procedure OpenPlanData;
    procedure UpdateButton;
  public
    { Public declarations }
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;

    procedure InitByCore(ACoreIntf: ISgtsCore);

    procedure CloseData; virtual;
    procedure OpenData;

    property DataSet: TSgtsDatabaseCDS read FDataSet;
    property Year: Integer write FYear;

    function CanRefresh: Boolean;
    procedure Refresh;
    function CanEdit: Boolean;
    procedure Edit;
    function CanOk: Boolean;
    procedure Ok;
    function CanCancel: Boolean;
    procedure Cancel;
  end;

implementation

{$R *.dfm}


constructor TSgtsMTScheduleFrame.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FEditMode:=false;
  FDataSet:=TSgtsDatabaseCDS.Create(nil);
  FDataSetPlan:=TSgtsDatabaseCDS.Create(nil);
end;

destructor TSgtsMTScheduleFrame.Destroy;
begin
  FDataSet.Free;
  FDataSetPlan.Free;
  inherited Destroy;
end;

procedure TSgtsMTScheduleFrame.InitByCore(ACoreIntf: ISgtsCore);
begin
  FCoreIntf:=ACoreIntf;
  FDataSet.InitByCore(ACoreIntf);
  with FDataSetPlan do begin
      ProviderName:='S_PLAN_YEAR_MEASURE_TYPES';
      with SelectDefs do begin
        AddInvisible('MEASURE_TYPE_ID');
        AddInvisible('PLAN_GRAPH_ID');
        AddInvisible('YEAR');
        AddInvisible('JANUARY');
        AddInvisible('FEBRUARY');
        AddInvisible('MARCH');
        AddInvisible('APRIL');
        AddInvisible('MAY');
        AddInvisible('JUNE');
        AddInvisible('JULY');
        AddInvisible('AUGUST');
        AddInvisible('SEPTEMBER');
        AddInvisible('OKTOBER');
        AddInvisible('NOVEMBER');
        AddInvisible('DECEMBER');
      end;
    end;
  FDataSetPlan.CheckProvider:=false;
  FDataSetPlan.InitByCore(ACoreIntf);
end;

function TSgtsMTScheduleFrame.CanRefresh;
begin
    Result:=Assigned(FDataSetPlan);
end;

function TSgtsMTScheduleFrame.CanEdit;
begin
  Result:=Assigned(FDataSetPlan) and not FEditMode;
end;

function TSgtsMTScheduleFrame.CanOk;
begin
  Result:=Assigned(FDataSetPlan) and FEditMode;
end;

function TSgtsMTScheduleFrame.CanCancel;
begin
  Result:=Assigned(FDataSetPlan) and FEditMode;
end;

procedure TSgtsMTScheduleFrame.UpdateButton;
begin
  ToolButtonRefresh.Enabled:=CanRefresh;
  ToolButtonEdit.Enabled:=CanEdit;
  ToolButtonOk.Enabled:=CanOk;
  ToolButtonCancel.Enabled:=CanCancel;
  CheckListBoxMonth.Enabled:=FEditMode;
end;

procedure TSgtsMTScheduleFrame.OpenPlanData;
begin

  if FDataSetPLan.Active then begin
        FDataSetPLan.Close;
      end;

  FDataSetPlan.FilterGroups.Clear;
  FDataSetPlan.FilterGroups.Add.Filters.Add('MEASURE_TYPE_ID',fcEqual,FDataSet.FieldByName('MEASURE_TYPE_ID').AsInteger);
  FDataSetPlan.FilterGroups.Add.Filters.Add('YEAR', fcEqual, FYear);
  FDataSetPlan.Open;

  FPlanGraphId:=FDataSetPlan.FieldByName('PLAN_GRAPH_ID').AsInteger;
  CheckListBoxMonth.Checked[0]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('JANUARY').AsInteger));
  CheckListBoxMonth.Checked[1]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('FEBRUARY').AsInteger));
  CheckListBoxMonth.Checked[2]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('MARCH').AsInteger));
  CheckListBoxMonth.Checked[3]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('APRIL').AsInteger));
  CheckListBoxMonth.Checked[4]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('MAY').AsInteger));
  CheckListBoxMonth.Checked[5]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('JUNE').AsInteger));
  CheckListBoxMonth.Checked[6]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('JULY').AsInteger));
  CheckListBoxMonth.Checked[7]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('AUGUST').AsInteger));
  CheckListBoxMonth.Checked[8]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('SEPTEMBER').AsInteger));
  CheckListBoxMonth.Checked[9]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('OKTOBER').AsInteger));
  CheckListBoxMonth.Checked[10]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('NOVEMBER').AsInteger));
  CheckListBoxMonth.Checked[11]:=StrToBool(IntToStr(FDataSetPlan.FieldByName('DECEMBER').AsInteger));
end;

procedure TSgtsMTScheduleFrame.Refresh;
begin
  OpenPlanData;
  UpdateButton;
end;

procedure TSgtsMTScheduleFrame.Edit;
begin
  FEditMode:=true;
  UpdateButton;
end;

procedure TSgtsMTScheduleFrame.Ok;
var
  DS: TSgtsDatabaseCDS;
begin
  DS:=TSgtsDatabaseCDS.Create(FCoreIntf);
  DS.ProviderName:='U_PLAN_GRAPH_MONTH';
  DS.CheckProvider:=false;
  with DS.ExecuteDefs do begin
    AddValue('PLAN_GRAPH_ID',FPlanGraphId);
    AddValue('JANUARY',StrToInt(BoolToStr(CheckListBoxMonth.Checked[0])));
    AddValue('FEBRUARY',StrToInt(BoolToStr(CheckListBoxMonth.Checked[1])));
    AddValue('MARCH',StrToInt(BoolToStr(CheckListBoxMonth.Checked[2])));
    AddValue('APRIL',StrToInt(BoolToStr(CheckListBoxMonth.Checked[3])));
    AddValue('MAY',StrToInt(BoolToStr(CheckListBoxMonth.Checked[4])));
    AddValue('JUNE',StrToInt(BoolToStr(CheckListBoxMonth.Checked[5])));
    AddValue('JULY',StrToInt(BoolToStr(CheckListBoxMonth.Checked[6])));
    AddValue('AUGUST',StrToInt(BoolToStr(CheckListBoxMonth.Checked[7])));
    AddValue('SEPTEMBER',StrToInt(BoolToStr(CheckListBoxMonth.Checked[8])));
    AddValue('OKTOBER',StrToInt(BoolToStr(CheckListBoxMonth.Checked[9])));
    AddValue('NOVEMBER',StrToInt(BoolToStr(CheckListBoxMonth.Checked[10])));
    AddValue('DECEMBER',StrToInt(BoolToStr(CheckListBoxMonth.Checked[11])));
  end;
  DS.Execute;
  FEditMode:=false;
  Refresh;
end;

procedure TSgtsMTScheduleFrame.Cancel;
begin
  FEditMode:=false;
  Refresh;
end;

procedure TSgtsMTScheduleFrame.ToolButtonRefreshClick(Sender: TObject);
begin
  Refresh;
end;

procedure TSgtsMTScheduleFrame.ToolButtonCancelClick(Sender: TObject);
begin
  Cancel;
end;

procedure TSgtsMTScheduleFrame.ToolButtonEditClick(Sender: TObject);
begin
  Edit;
end;

procedure TSgtsMTScheduleFrame.ToolButtonOkClick(Sender: TObject);
begin
  Ok;
end;

procedure TSgtsMTScheduleFrame.CloseData;
begin
  if FDataSet.Active then
    FDataSet.Close;
end;

procedure TSgtsMTScheduleFrame.OpenData;
begin
  if not FDataSet.Active then begin
    try
      FDataSet.Open;
      OpenPlanData;

    except
      on E: Exception do
        //ShowError(E.Message);
    end;
  end;
  //Edit1.Text:=FDataSet.FieldByName('MEASURE_TYPE_ID').AsString;
  UpdateButton;
end;

end.
